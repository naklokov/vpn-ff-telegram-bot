const { CMD, CALLBACK_QUERY_DATA } = require("../../constants");
const { usersConnector } = require("../../db");
const { getUserPersonalDataFromContext } = require("../../utils/common");

module.exports = async (ctx) => {
  const { id: chatId } = getUserPersonalDataFromContext(ctx);
  const user = await usersConnector.getUserByChatId(chatId);

  if (!user?.chatId) {
    await ctx.reply(
      `–í—ã –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ, –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é üëâ /${CMD.registration}`,
    );
    return;
  }

  var options = {
    parse_mode: "MarkdownV2",
    reply_markup: JSON.stringify({
      inline_keyboard: [
        [
          {
            text: "IPSEC",
            callback_data: CALLBACK_QUERY_DATA.instructionsIpsec,
          },
          {
            text: "VLESS",
            callback_data: CALLBACK_QUERY_DATA.instructionsVless,
          },
        ],
      ],
    }),
  };

  await ctx.reply(
    `–í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞ –≤—ã–±–æ—Ä –¥–≤–∞ —Å–µ—Ä–≤–µ—Ä–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –í–ü–ù
    
*IPSEC* \\- –ª—ë–≥–∫–∏–π –∏ –±—ã—Å—Ç—Ä—ã–π –í–ü–ù, —á–∞—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —à—É—Å—Ç—Ä–µ–µ —á–µ–º VLESS, –Ω–æ –∏–Ω–æ–≥–¥–∞ –ø–æ–ø–∞–¥–∞–µ—Ç –ø–æ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
*VLESS* \\- –±–æ–ª–µ–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –í–ü–ù, –∫—Ä–∞–π–Ω–µ —Ä–µ–¥–∫–æ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏, –Ω–æ –∏–Ω–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —á—É—Ç—å –º–µ–¥–ª–µ–Ω–Ω–µ–µ \\(–æ—Å–æ–±–µ–Ω–Ω–æ –Ω–∞ ios\\)
    `,
    options,
  );
};
